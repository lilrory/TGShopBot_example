import asyncio
import logging

from aiogram import Bot, Dispatcher, types
from aiogram import F
from aiogram.filters.command import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config_reader import config


logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.bot_token.get_secret_value())
dp = Dispatcher()


@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    user = message.from_user
    kb = [
        [
            types.KeyboardButton(text='üõí–¢–æ–≤–∞—Ä—ã'),
            types.KeyboardButton(text='üë§–ü—Ä–æ—Ñ–∏–ª—å'),
            types.KeyboardButton(text='ü§ù–û –Ω–∞—Å')
        ]
    ]
    keyboard = (types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    ))
    await message.answer(
        f'<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!</b>\n'
        '–í –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏...\n\n\n'
        '<i>‚ùóÔ∏è–ë–æ—Ç –Ω–∞–ø–∏—Å–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø—Ä–∏–º–µ—Ä–∞‚ùóÔ∏è</i>',
        reply_markup=keyboard,
        parse_mode='HTML'
    )


@dp.message(F.text.lower() == 'üõí—Ç–æ–≤–∞—Ä—ã')
async def product(message: types.Message):
    await message.reply('–î–æ–¥–µ–ª–∞—Ç—å')

@dp.message(F.text.lower() == 'üë§–ø—Ä–æ—Ñ–∏–ª—å')
async def account(message: types.Message):
    await message.reply(
        '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n\n'
        f'<i>–ò–º—è: </i>\n'
        '...\n'
        '...\n',
        parse_mode='HTML'
    )

@dp.message(F.text.lower() == 'ü§ù–æ –Ω–∞—Å')
async def about(message: types.Message):
    await message.reply(
        '<b>–†–∞–∑–¥–µ–ª –æ –Ω–∞—Å‚ùóÔ∏è</b>\n\n'
        '<i>–∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</i>\n'
        '...\n'
        '...',
        parse_mode='HTML'
    )


admin_users = [5946765150, 'admin_username']
@dp.message(Command('admin_panel'))
async def admin(message: types.Message):
    user = message.from_user
    if message.from_user.id in admin_users:
        kb = [
        [   
            types.KeyboardButton(text='üõí–¢–æ–≤–∞—Ä—ã'),
            types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'),
            types.KeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞'),
            types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥')
        ]
    ]
        keyboard = (types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True
    ))
        await message.reply(f'–ü—Ä–∏–≤–µ—Ç, <b>{user.first_name}!</b>',reply_markup=keyboard, parse_mode='HTML')
    else:
        await message.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')


@dp.message(F.text.lower() == '–¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä')
async def add_product(message: types.Message):
    if message.from_user.id in admin_users:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:')
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')






@dp.message(F.text.lower() == '—Ä–∞—Å—Å—ã–ª–∫–∞')
async def mailing(message: types.Message):
    if message.from_user.id in admin_users:
        await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:')
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')


@dp.message(F.text.lower() == '–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥')
async def promo(message: types.Message):
    if message.from_user.id in admin_users:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥:')
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')




async def main():
    await dp.start_polling(bot)


if __name__=='__main__':
    asyncio.run(main())
